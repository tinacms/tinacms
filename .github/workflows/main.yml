name: Build, Test, Lint for Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, labeled]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          package_json_file: package.json
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Build Types
        run: pnpm types

      - name: Check Tina lock changes
        run: pnpm diff-tina-lock

      - name: Set NPMRC
        run: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > .npmrc
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Publish tagged PR
        if: >
          matrix.os == 'ubuntu-latest' &&
          github.event_name == 'pull_request' &&
          contains(github.event.pull_request.labels.*.name, 'tagged')
        continue-on-error: true
        run: |
          echo running on branch ${BRANCH_NAME}
          pnpm version:snapshot $(echo ${{ github.sha }} | cut -c1-7)
          pnpm publish -r --tag ${BRANCH_NAME} --no-git-checks --access public
          echo "Published NPM tag: $BRANCH_NAME" >> $GITHUB_STEP_SUMMARY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

      - name: Test
        run: pnpm test

      - name: Lint
        if: matrix.os == 'ubuntu-latest'
        run: pnpm lint
