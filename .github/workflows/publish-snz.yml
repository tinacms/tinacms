name: Publish SNZ
on:
  push:
    branches:
      - '**'
    branches-ignore:
      - 'main'
  workflow_dispatch: # Manual trigger

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      GITHUB_TOKEN: ${{ secrets.NPM_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          package_json_file: package.json
          run_install: false

      - name: Setup git credentials
        run: |
          git config --global user.email "ci@streamliners.co.nz"
          git config --global user.name "Streamliners CI"

      # Configure AWS credentials step
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      # Get CodeArtifact authorization token
      - name: Get CodeArtifact token
        id: codeartifact-token
        run: |
          TOKEN=$(aws codeartifact get-authorization-token --domain streamliners-npm --domain-owner 368438108069 --query authorizationToken --output text)
          echo "CODEARTIFACT_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Configure .npmrc for AWS CodeArtifact
        run: |
          echo "registry=https://streamliners-npm-368438108069.d.codeartifact.ap-southeast-2.amazonaws.com/npm/tina-cms-snz/" > ~/.npmrc
          echo "//streamliners-npm-368438108069.d.codeartifact.ap-southeast-2.amazonaws.com/npm/tina-cms-snz/:_authToken=${CODEARTIFACT_TOKEN}" >> ~/.npmrc

      # Run our package.json updater script.
      # Note: We require glob which we can globally install before hand in a temp dir to not trigger any of the pnpm workspace code
      - name: Update all package.json files
        run: |
          node scripts/update-package-jsons.js

      - name: Clean workspace and prepare
        run: |
          # Clean node_modules to ensure clean install
          find . -name "node_modules" -type d -exec rm -rf {} +
          find . -name ".turbo" -type d -exec rm -rf {} +

          # Create a docker-like isolated environment

          # Configure .npmrc for AWS CodeArtifact in the tinacms directory too
          echo "registry=https://streamliners-npm-368438108069.d.codeartifact.ap-southeast-2.amazonaws.com/npm/tina-cms-snz/" > .npmrc
          echo "//streamliners-npm-368438108069.d.codeartifact.ap-southeast-2.amazonaws.com/npm/tina-cms-snz/:_authToken=${CODEARTIFACT_TOKEN}" >> .npmrc

          # Install with scripts enabled (removed --ignore-scripts)
          pnpm install --no-frozen-lockfile

          # Build @tinacms/scripts first
          cd packages/@tinacms/scripts
          pnpm build
          cd ../..

          # Then build the rest
          pnpm build
          pnpm types

      - name: Publish to CodeArtifact
        run: |
          # Stable publish for main
          if [[ "$GITHUB_REF" == "refs/heads/streamliners-main" ]]; then
            echo "Publishing stable version"
            pnpm run version
            pnpm publish -r --no-git-checks --access public
          # Beta/preview publish for all other branches
          else
            echo "Publishing beta version"
            git checkout ${{ github.sha }}
            pnpm version:snapshot $(echo ${{ github.sha }} | cut -c1-7)
            pnpm publish -r --tag beta --no-git-checks --access public
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          CODEARTIFACT_TOKEN: ${{ env.CODEARTIFACT_TOKEN }}

      - name: Summary
        if: always()
        run: |
          echo "📝 Build completed. Check above for publish status." >> $GITHUB_STEP_SUMMARY
